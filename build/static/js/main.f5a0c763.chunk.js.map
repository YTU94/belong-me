{"version":3,"sources":["components/shellForm/index.js","components/pageFooter/index.js","utils/api.js","views/home/index.js","views/app/index.js","views/story/index.js","App.js","serviceWorker.js","index.js"],"names":["ShellForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","shellChange","setState","shell","currentTarget","value","passwordChange","password","state","react_default","a","createElement","className","input","onChange","placeholder","prefix","icon","type","style","color","Password","React","Component","PageFooter","divider","instance","baseUrl","params","Promise","resolve","reject","axios","method","url","data","then","res","message","destroy","status","catch","api","submitShell","getAppleidList","Meta","Option","shellList","key","name","Home","visible","curShell","showModal","handleOk","Api","shellForm","current","handleCancel","selectChange","createRef","card","width","cover","alt","src","actions","avatar","title","description","es_button","onClick","modal","onOk","onCancel","okText","es_select","defaultValue","map","ref","pageFooter","_useState","useState","_useState2","slicedToArray","listData","setListdata","_useState3","_useState4","count","useEffect","document","concat","list","itemLayout","size","pagination","page","pageSize","dataSource","footer","renderItem","item","Item","id","href","account","remark","Url2","getElementById","select","execCommand","bind","timeline","dot","fontSize","breadcrumbNameMap","/apps","/home","/story","/apps/1","/apps/2","/apps/1/detail","/apps/2/detail","Homes","withRouter","pathSnippets","location","pathname","split","filter","i","extraBreadcrumbItems","_","index","slice","join","breadcrumb","react_router_dom","to","breadcrumbItems","es_alert","margin","react_router","path","component","story","Apps","App","Boolean","window","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f5a0c763.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./app.less\"\n\nimport { Icon, Input } from \"antd\"\n\nclass ShellForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            shell: \"\",\n            password: \"\"\n        }\n    }\n    handleSubmit = e => {\n        e.preventDefault()\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(\"Received values of form: \", values)\n            }\n        })\n    }\n\n    shellChange = e => {\n        console.log(this.props)\n        this.setState({\n            shell: e.currentTarget.value\n        })\n    }\n\n    passwordChange = e => {\n        this.setState({\n            password: e.currentTarget.value\n        })\n    }\n\n    render() {\n        return (\n            <div className=''>\n                <Input\n                    value={this.state.shell}\n                    onChange={this.shellChange}\n                    placeholder='Enter Shell'\n                    prefix={<Icon type='file-text' style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                />\n                <br />\n                <br />\n                <Input.Password\n                    value={this.state.password}\n                    onChange={this.passwordChange}\n                    placeholder='Enter password'\n                    prefix={<Icon type='lock' style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                />\n                <br />\n                <br />\n            </div>\n        )\n    }\n}\n\nexport default ShellForm\n","import React from \"react\"\nimport { Divider } from \"antd\"\nimport \"./app.less\"\n\nfunction PageFooter() {\n    return (\n        <div className='page-footer'>\n            <Divider />\n            <p className='page-footer-line'>2019@ytu 联系方式</p>\n        </div>\n    )\n}\n\nexport default PageFooter\n","import axios from \"axios\"\nimport { message } from \"antd\"\n\n// axios.defaults.baseURL = \"http://ggapi.ytuj.cn\"\nconst defaultBaseURL = \"http://ggapi.ytuj.cn\"\n// const baseURL = \"http://api.ytuj.cn\"\n\nconst instance = function(baseUrl, params) {\n    return new Promise((resolve, reject) => {\n        // message.loading(\"加载中\", 0)\n        // const hide = message.loading('Action in progress..', 0);\n        axios({\n            method: params.method,\n            url: baseUrl + params.url,\n            data: params.data\n        })\n            .then(res => {\n                message.destroy()\n                if (res.status & 200) {\n                    resolve(res.data)\n                } else {\n                    // message.error(res.data.msg || \"未知错误\")\n                }\n            })\n            .catch(err => {\n                message.destroy()\n                // message.error(err.msg || \"未知错误\")\n                reject(err)\n            })\n    })\n}\n\nconst submitShell = function(data) {\n    return instance(defaultBaseURL, {\n        method: \"post\",\n        url: \"/api/doshell\",\n        data: data\n    })\n}\n\nconst getAppleidList = data => {\n    return instance(defaultBaseURL, {\n        method: \"get\",\n        url: \"/api/appleidList\",\n        data: data\n    })\n}\nexport default {\n    submitShell,\n    getAppleidList\n}\n","import React from \"react\"\nimport { Modal, Button, Card, Icon, Avatar, Select } from \"antd\"\nimport ShellForm from \"../../components/shellForm\"\nimport PageFooter from \"../../components/pageFooter\"\nimport Api from \"../../utils/api\"\n\nconst { Meta } = Card\nconst { Option } = Select\n\nconst shellList = [\n    {\n        key: 0,\n        name: \"更新taro-back\",\n        shell: \"cd /www/back/node & git pull & pm2 restart \"\n    },\n    {\n        key: 1,\n        name: \"更新meedu-back\",\n        shell: \"cd /www/node/back-end && git pull && pm2 start bin/www\"\n    },\n    {\n        key: 2,\n        name: \"自我更新\",\n        shell: \"cd /opt/out/belong-me & rm -rf build & git pull origin master\"\n    }\n]\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n        this.shellForm = React.createRef()\n    }\n\n    state = { visible: false, curShell: \"\" }\n\n    showModal = () => {\n        this.setState({\n            visible: true\n        })\n    }\n\n    handleOk = e => {\n        this.setState({\n            visible: false\n        })\n        Api.submitShell({\n            shell: this.shellForm.current.state.shell,\n            password: this.shellForm.current.state.password\n        }).then(res => {\n            console.log(res)\n        })\n    }\n\n    handleCancel = e => {\n        this.setState({\n            visible: false\n        })\n    }\n    selectChange = e => {\n        this.shellForm.current.state.shell = e\n        this.setState({\n            curShell: e\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Card\n                    style={{ width: 300 }}\n                    cover={<img alt='example' src='https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png' />}\n                    actions={[\n                        <Icon type='setting' key='setting' />,\n                        <Icon type='edit' key='edit' />,\n                        <Icon type='ellipsis' key='ellipsis' />\n                    ]}\n                >\n                    <Meta\n                        avatar={<Avatar src='https://avatars1.githubusercontent.com/u/19224071?s=460&v=4' />}\n                        title='Ytu'\n                        description='一枚伪前端工程师'\n                    />\n                </Card>\n                <br />\n                <br />\n                <div>\n                    <Button type='primary' onClick={this.showModal}>\n                        Submit Shell\n                    </Button>\n                    <Modal\n                        title='Submit Shell'\n                        visible={this.state.visible}\n                        onOk={this.handleOk}\n                        onCancel={this.handleCancel}\n                        okText='submit'\n                    >\n                        <p>Please enter the shell command and execute password</p>\n                        <b>Shell：</b>\n                        <Select defaultValue='' onChange={this.selectChange} style={{ width: 160 }}>\n                            {shellList.map(e => {\n                                return (\n                                    <Option value={e.shell} key={e.key}>\n                                        {e.name}\n                                    </Option>\n                                )\n                            })}\n                        </Select>\n                        <br />\n                        <br />\n                        <ShellForm props={this.state.curShell} ref={this.shellForm} />\n                    </Modal>\n                </div>\n\n                <br />\n                <br />\n                <PageFooter />\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import React, { useState, useEffect } from \"react\"\nimport { List, Avatar, Icon, InputNumber } from \"antd\"\nimport PageFooter from \"../../components/pageFooter\"\nimport Api from \"../../utils/api\"\n\nimport \"./app.less\"\n\nfunction Home() {\n    const [listData, setListdata] = useState([])\n    const [count, setCount] = useState(0)\n    const copyPwd = e => {\n        const id = `pwdId${e.id}` || 0\n        var Url2 = document.getElementById(id)\n        console.log(Url2)\n        Url2.select()\n        document.execCommand(\"copy\", true)\n    }\n\n    useEffect(() => {\n        console.log(1)\n        // getData()\n        document.title = `You clicked ${count} times`\n        Api.getAppleidList({}).then(res => {\n            console.log(1)\n            setListdata(res.data)\n        })\n    }, [])\n\n    return (\n        <div className='app'>\n            <header className='App-header' />\n\n            <List\n                itemLayout='vertical'\n                size='large'\n                pagination={{\n                    onChange: page => {\n                        console.log(page)\n                    },\n                    pageSize: 3\n                }}\n                dataSource={listData}\n                footer={\n                    <div>\n                        <b>ant design</b> footer part\n                    </div>\n                }\n                renderItem={item => (\n                    <List.Item\n                        key={item.title}\n                        // actions={[\n                        //     <IconText type='star-o' text='156' key='list-vertical-star-o' />,\n                        //     <IconText type='like-o' text='156' key='list-vertical-like-o' />,\n                        //     <IconText type='message' text='2' key='list-vertical-message' />\n                        // ]}\n                        // extra={<img width={272} alt='logo' src='https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png' />}\n                    >\n                        <List.Item.Meta\n                            avatar={<Avatar src={item.avatar || item.id} />}\n                            title={\n                                <a href={item.href}>\n                                    {item.name} : {item.account}\n                                </a>\n                            }\n                            description={item.remark}\n                        />\n                        <div>\n                            密码 ： &nbsp;\n                            <a href='#' onClick={copyPwd.bind(this, item)}>\n                                {item.password}\n                            </a>\n                        </div>\n                    </List.Item>\n                )}\n            />\n            <PageFooter />\n        </div>\n    )\n}\n\nexport default Home\n","import React from \"react\"\nimport {  Icon, Timeline } from \"antd\"\nimport PageFooter from \"../../components/pageFooter\"\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n        this.shellForm = React.createRef()\n    }\n\n    state = { visible: false, curShell: \"\" }\n\n    render() {\n        return (\n            <div>\n                <Timeline>\n                    <Timeline.Item>Create a services site 2015-09-01</Timeline.Item>\n                    <Timeline.Item>Solve initial network problems 2015-09-01</Timeline.Item>\n                    <Timeline.Item dot={<Icon type='clock-circle-o' style={{ fontSize: \"16px\" }} />} color='red'>\n                        Technical testing 2015-09-01\n                    </Timeline.Item>\n                    <Timeline.Item>Network problems being solved 2015-09-01</Timeline.Item>\n                </Timeline>\n                <br />\n                <br />\n                <PageFooter />\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import React from \"react\"\nimport \"./App.css\"\nimport { HashRouter as Router, Route, Switch, Link, withRouter } from \"react-router-dom\"\nimport { Breadcrumb, Alert } from \"antd\"\nimport Home from \"./views/home/\"\nimport Apps from \"./views/app\"\nimport story from \"./views/story\"\nconst breadcrumbNameMap = {\n    \"/apps\": \"app\",\n    \"/home\": \"home\",\n    \"/story\": \"story\",\n    \"/apps/1\": \"Application1\",\n    \"/apps/2\": \"Application2\",\n    \"/apps/1/detail\": \"Detail\",\n    \"/apps/2/detail\": \"Detail\"\n}\n\nconst Homes = withRouter(props => {\n    const { location } = props\n    const pathSnippets = location.pathname.split(\"/\").filter(i => i)\n    const extraBreadcrumbItems = pathSnippets.map((_, index) => {\n        const url = `/${pathSnippets.slice(0, index + 1).join(\"/\")}`\n        return (\n            <Breadcrumb.Item key={url}>\n                <Link to={url}>{breadcrumbNameMap[url]}</Link>\n            </Breadcrumb.Item>\n        )\n    })\n    const breadcrumbItems = [\n        <Breadcrumb.Item key='home'>\n            <Link to='/'>Home</Link>\n        </Breadcrumb.Item>\n    ].concat(extraBreadcrumbItems)\n\n    return (\n        <div className='App'>\n            <div className='demo-nav'>\n                <Link to='/'>Ytu </Link>|<Link to='/home'> 主页</Link>|<Link to='/story'> 故事</Link>\n            </div>\n            <Alert style={{ margin: \"16px 0\" }} message=':---------------->' />\n            <Breadcrumb>{breadcrumbItems}</Breadcrumb>\n\n            <Switch>\n                <Route path='/story' component={story} />\n                <Route path='/home' component={Home} />\n                <Route path='' component={Apps} />\n            </Switch>\n        </div>\n    )\n})\n\nfunction App() {\n    return (\n        <Router>\n            <Homes />\n        </Router>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}